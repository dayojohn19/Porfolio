# Generated by Django 3.2.6 on 2021-10-14 08:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64)),
                ('hcode', models.CharField(max_length=64)),
                ('ring_code', models.CharField(blank=True, max_length=64)),
                ('pigeon_id', models.CharField(blank=True, max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Entries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('user', models.CharField(max_length=50)),
                ('ring', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=50)),
                ('link', models.CharField(max_length=100)),
                ('linkimage', models.CharField(max_length=100)),
                ('time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_lat', models.CharField(max_length=64)),
                ('release_long', models.CharField(max_length=64)),
                ('released', models.BooleanField(default=False)),
                ('release_time', models.IntegerField(blank=True, default=1)),
                ('char_time', models.CharField(blank=True, max_length=64)),
                ('loading_cost', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Loaded',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isLoaded', models.BooleanField(default=True)),
                ('race_id', models.CharField(max_length=64)),
                ('race_name', models.CharField(max_length=64)),
                ('lap', models.CharField(max_length=64)),
                ('lap_name', models.CharField(max_length=64)),
                ('pigeon_id', models.CharField(max_length=65)),
                ('pigeon_name', models.CharField(max_length=64)),
                ('pigeon_ring', models.CharField(blank=True, max_length=64)),
                ('pigeon_hcode', models.CharField(blank=True, max_length=64)),
                ('pigeon_lat', models.CharField(max_length=64)),
                ('pigeon_long', models.CharField(max_length=64)),
                ('pigeon_loader', models.CharField(max_length=64)),
                ('release_lat', models.CharField(max_length=64)),
                ('release_long', models.CharField(max_length=64)),
                ('release_time', models.IntegerField(blank=True, default=1, null=True)),
                ('clock_time', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField()),
                ('latitude', models.CharField(max_length=64)),
                ('longitude', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=64)),
                ('place_lat', models.CharField(max_length=64)),
                ('place_long', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('racename', models.CharField(max_length=64)),
                ('price', models.IntegerField()),
                ('started', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pigeon_id', models.IntegerField(default=1)),
                ('ring', models.CharField(max_length=50)),
                ('pigeon_name', models.CharField(max_length=64)),
                ('lap_id', models.CharField(max_length=50)),
                ('lap_name', models.CharField(max_length=64)),
                ('race', models.CharField(max_length=64)),
                ('race_name', models.CharField(max_length=64)),
                ('release', models.CharField(max_length=64)),
                ('time', models.CharField(max_length=64)),
                ('clock', models.CharField(max_length=64)),
                ('speed', models.DecimalField(decimal_places=2, max_digits=20)),
                ('distance', models.CharField(max_length=64)),
            ],
            options={
                'ordering': ['-speed'],
            },
        ),
        migrations.CreateModel(
            name='Standing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_id', models.IntegerField()),
                ('pigeon_id', models.IntegerField()),
                ('pigeon_name', models.CharField(max_length=64)),
                ('tspeed', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-tspeed'],
            },
        ),
    ]
